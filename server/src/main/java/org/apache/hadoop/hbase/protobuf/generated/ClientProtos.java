// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Client.proto

package org.apache.hadoop.hbase.protobuf.generated;

public final class ClientProtos {
  private ClientProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ResultOrBuilder extends
      // @@protoc_insertion_point(interface_extends:Result)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    java.util.List<org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell> 
        getCellList();
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell getCell(int index);
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    int getCellCount();
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    java.util.List<? extends org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder> 
        getCellOrBuilderList();
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder getCellOrBuilder(
        int index);

    /**
     * <code>optional int32 associated_cell_count = 2;</code>
     *
     * <pre>
     * The below count is set when the associated cells are
     * not part of this protobuf message; they are passed alongside
     * and then this Message is just a placeholder with metadata.
     * The count is needed to know how many to peel off the block of Cells as
     * ours.  NOTE: This is different from the pb managed cell_count of the
     * 'cell' field above which is non-null when the cells are pb'd.
     * </pre>
     */
    boolean hasAssociatedCellCount();
    /**
     * <code>optional int32 associated_cell_count = 2;</code>
     *
     * <pre>
     * The below count is set when the associated cells are
     * not part of this protobuf message; they are passed alongside
     * and then this Message is just a placeholder with metadata.
     * The count is needed to know how many to peel off the block of Cells as
     * ours.  NOTE: This is different from the pb managed cell_count of the
     * 'cell' field above which is non-null when the cells are pb'd.
     * </pre>
     */
    int getAssociatedCellCount();

    /**
     * <code>optional bool exists = 3;</code>
     *
     * <pre>
     * used for Get to check existence only. Not set if existence_only was not set to true
     *  in the query.
     * </pre>
     */
    boolean hasExists();
    /**
     * <code>optional bool exists = 3;</code>
     *
     * <pre>
     * used for Get to check existence only. Not set if existence_only was not set to true
     *  in the query.
     * </pre>
     */
    boolean getExists();
  }
  /**
   * Protobuf type {@code Result}
   */
  public static final class Result extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:Result)
      ResultOrBuilder {
    // Use Result.newBuilder() to construct.
    private Result(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Result(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Result defaultInstance;
    public static Result getDefaultInstance() {
      return defaultInstance;
    }

    public Result getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Result(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cell_ = new java.util.ArrayList<org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell>();
                mutable_bitField0_ |= 0x00000001;
              }
              cell_.add(input.readMessage(org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              associatedCellCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              exists_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cell_ = java.util.Collections.unmodifiableList(cell_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return org.apache.hadoop.hbase.protobuf.generated.ClientProtos.internal_static_Result_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return org.apache.hadoop.hbase.protobuf.generated.ClientProtos.internal_static_Result_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result.class, org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result.Builder.class);
    }

    public static com.google.protobuf.Parser<Result> PARSER =
        new com.google.protobuf.AbstractParser<Result>() {
      public Result parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Result(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Result> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CELL_FIELD_NUMBER = 1;
    private java.util.List<org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell> cell_;
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    public java.util.List<org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell> getCellList() {
      return cell_;
    }
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    public java.util.List<? extends org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder> 
        getCellOrBuilderList() {
      return cell_;
    }
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    public int getCellCount() {
      return cell_.size();
    }
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    public org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell getCell(int index) {
      return cell_.get(index);
    }
    /**
     * <code>repeated .Cell cell = 1;</code>
     *
     * <pre>
     * Result includes the Cells or else it just has a count of Cells
     * that are carried otherwise.
     * </pre>
     */
    public org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder getCellOrBuilder(
        int index) {
      return cell_.get(index);
    }

    public static final int ASSOCIATED_CELL_COUNT_FIELD_NUMBER = 2;
    private int associatedCellCount_;
    /**
     * <code>optional int32 associated_cell_count = 2;</code>
     *
     * <pre>
     * The below count is set when the associated cells are
     * not part of this protobuf message; they are passed alongside
     * and then this Message is just a placeholder with metadata.
     * The count is needed to know how many to peel off the block of Cells as
     * ours.  NOTE: This is different from the pb managed cell_count of the
     * 'cell' field above which is non-null when the cells are pb'd.
     * </pre>
     */
    public boolean hasAssociatedCellCount() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 associated_cell_count = 2;</code>
     *
     * <pre>
     * The below count is set when the associated cells are
     * not part of this protobuf message; they are passed alongside
     * and then this Message is just a placeholder with metadata.
     * The count is needed to know how many to peel off the block of Cells as
     * ours.  NOTE: This is different from the pb managed cell_count of the
     * 'cell' field above which is non-null when the cells are pb'd.
     * </pre>
     */
    public int getAssociatedCellCount() {
      return associatedCellCount_;
    }

    public static final int EXISTS_FIELD_NUMBER = 3;
    private boolean exists_;
    /**
     * <code>optional bool exists = 3;</code>
     *
     * <pre>
     * used for Get to check existence only. Not set if existence_only was not set to true
     *  in the query.
     * </pre>
     */
    public boolean hasExists() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool exists = 3;</code>
     *
     * <pre>
     * used for Get to check existence only. Not set if existence_only was not set to true
     *  in the query.
     * </pre>
     */
    public boolean getExists() {
      return exists_;
    }

    private void initFields() {
      cell_ = java.util.Collections.emptyList();
      associatedCellCount_ = 0;
      exists_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cell_.size(); i++) {
        output.writeMessage(1, cell_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, associatedCellCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, exists_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < cell_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, cell_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, associatedCellCount_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, exists_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result)) {
        return super.equals(obj);
      }
      org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result other = (org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result) obj;

      boolean result = true;
      result = result && getCellList()
          .equals(other.getCellList());
      result = result && (hasAssociatedCellCount() == other.hasAssociatedCellCount());
      if (hasAssociatedCellCount()) {
        result = result && (getAssociatedCellCount()
            == other.getAssociatedCellCount());
      }
      result = result && (hasExists() == other.hasExists());
      if (hasExists()) {
        result = result && (getExists()
            == other.getExists());
      }
      result = result &&
          getUnknownFields().equals(other.getUnknownFields());
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptorForType().hashCode();
      if (getCellCount() > 0) {
        hash = (37 * hash) + CELL_FIELD_NUMBER;
        hash = (53 * hash) + getCellList().hashCode();
      }
      if (hasAssociatedCellCount()) {
        hash = (37 * hash) + ASSOCIATED_CELL_COUNT_FIELD_NUMBER;
        hash = (53 * hash) + getAssociatedCellCount();
      }
      if (hasExists()) {
        hash = (37 * hash) + EXISTS_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
            getExists());
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code Result}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:Result)
        org.apache.hadoop.hbase.protobuf.generated.ClientProtos.ResultOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return org.apache.hadoop.hbase.protobuf.generated.ClientProtos.internal_static_Result_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return org.apache.hadoop.hbase.protobuf.generated.ClientProtos.internal_static_Result_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result.class, org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result.Builder.class);
      }

      // Construct using org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getCellFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (cellBuilder_ == null) {
          cell_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          cellBuilder_.clear();
        }
        associatedCellCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        exists_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return org.apache.hadoop.hbase.protobuf.generated.ClientProtos.internal_static_Result_descriptor;
      }

      public org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result getDefaultInstanceForType() {
        return org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result.getDefaultInstance();
      }

      public org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result build() {
        org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result buildPartial() {
        org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result result = new org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (cellBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            cell_ = java.util.Collections.unmodifiableList(cell_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.cell_ = cell_;
        } else {
          result.cell_ = cellBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.associatedCellCount_ = associatedCellCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.exists_ = exists_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result) {
          return mergeFrom((org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result other) {
        if (other == org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result.getDefaultInstance()) return this;
        if (cellBuilder_ == null) {
          if (!other.cell_.isEmpty()) {
            if (cell_.isEmpty()) {
              cell_ = other.cell_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCellIsMutable();
              cell_.addAll(other.cell_);
            }
            onChanged();
          }
        } else {
          if (!other.cell_.isEmpty()) {
            if (cellBuilder_.isEmpty()) {
              cellBuilder_.dispose();
              cellBuilder_ = null;
              cell_ = other.cell_;
              bitField0_ = (bitField0_ & ~0x00000001);
              cellBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCellFieldBuilder() : null;
            } else {
              cellBuilder_.addAllMessages(other.cell_);
            }
          }
        }
        if (other.hasAssociatedCellCount()) {
          setAssociatedCellCount(other.getAssociatedCellCount());
        }
        if (other.hasExists()) {
          setExists(other.getExists());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (org.apache.hadoop.hbase.protobuf.generated.ClientProtos.Result) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell> cell_ =
        java.util.Collections.emptyList();
      private void ensureCellIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cell_ = new java.util.ArrayList<org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell>(cell_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell, org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder, org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder> cellBuilder_;

      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public java.util.List<org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell> getCellList() {
        if (cellBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cell_);
        } else {
          return cellBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public int getCellCount() {
        if (cellBuilder_ == null) {
          return cell_.size();
        } else {
          return cellBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell getCell(int index) {
        if (cellBuilder_ == null) {
          return cell_.get(index);
        } else {
          return cellBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder setCell(
          int index, org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell value) {
        if (cellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellIsMutable();
          cell_.set(index, value);
          onChanged();
        } else {
          cellBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder setCell(
          int index, org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder builderForValue) {
        if (cellBuilder_ == null) {
          ensureCellIsMutable();
          cell_.set(index, builderForValue.build());
          onChanged();
        } else {
          cellBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder addCell(org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell value) {
        if (cellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellIsMutable();
          cell_.add(value);
          onChanged();
        } else {
          cellBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder addCell(
          int index, org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell value) {
        if (cellBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCellIsMutable();
          cell_.add(index, value);
          onChanged();
        } else {
          cellBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder addCell(
          org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder builderForValue) {
        if (cellBuilder_ == null) {
          ensureCellIsMutable();
          cell_.add(builderForValue.build());
          onChanged();
        } else {
          cellBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder addCell(
          int index, org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder builderForValue) {
        if (cellBuilder_ == null) {
          ensureCellIsMutable();
          cell_.add(index, builderForValue.build());
          onChanged();
        } else {
          cellBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder addAllCell(
          java.lang.Iterable<? extends org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell> values) {
        if (cellBuilder_ == null) {
          ensureCellIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, cell_);
          onChanged();
        } else {
          cellBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder clearCell() {
        if (cellBuilder_ == null) {
          cell_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          cellBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public Builder removeCell(int index) {
        if (cellBuilder_ == null) {
          ensureCellIsMutable();
          cell_.remove(index);
          onChanged();
        } else {
          cellBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder getCellBuilder(
          int index) {
        return getCellFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder getCellOrBuilder(
          int index) {
        if (cellBuilder_ == null) {
          return cell_.get(index);  } else {
          return cellBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public java.util.List<? extends org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder> 
           getCellOrBuilderList() {
        if (cellBuilder_ != null) {
          return cellBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cell_);
        }
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder addCellBuilder() {
        return getCellFieldBuilder().addBuilder(
            org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.getDefaultInstance());
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder addCellBuilder(
          int index) {
        return getCellFieldBuilder().addBuilder(
            index, org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.getDefaultInstance());
      }
      /**
       * <code>repeated .Cell cell = 1;</code>
       *
       * <pre>
       * Result includes the Cells or else it just has a count of Cells
       * that are carried otherwise.
       * </pre>
       */
      public java.util.List<org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder> 
           getCellBuilderList() {
        return getCellFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell, org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder, org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder> 
          getCellFieldBuilder() {
        if (cellBuilder_ == null) {
          cellBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell, org.apache.hadoop.hbase.protobuf.generated.CellProtos.Cell.Builder, org.apache.hadoop.hbase.protobuf.generated.CellProtos.CellOrBuilder>(
                  cell_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          cell_ = null;
        }
        return cellBuilder_;
      }

      private int associatedCellCount_ ;
      /**
       * <code>optional int32 associated_cell_count = 2;</code>
       *
       * <pre>
       * The below count is set when the associated cells are
       * not part of this protobuf message; they are passed alongside
       * and then this Message is just a placeholder with metadata.
       * The count is needed to know how many to peel off the block of Cells as
       * ours.  NOTE: This is different from the pb managed cell_count of the
       * 'cell' field above which is non-null when the cells are pb'd.
       * </pre>
       */
      public boolean hasAssociatedCellCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 associated_cell_count = 2;</code>
       *
       * <pre>
       * The below count is set when the associated cells are
       * not part of this protobuf message; they are passed alongside
       * and then this Message is just a placeholder with metadata.
       * The count is needed to know how many to peel off the block of Cells as
       * ours.  NOTE: This is different from the pb managed cell_count of the
       * 'cell' field above which is non-null when the cells are pb'd.
       * </pre>
       */
      public int getAssociatedCellCount() {
        return associatedCellCount_;
      }
      /**
       * <code>optional int32 associated_cell_count = 2;</code>
       *
       * <pre>
       * The below count is set when the associated cells are
       * not part of this protobuf message; they are passed alongside
       * and then this Message is just a placeholder with metadata.
       * The count is needed to know how many to peel off the block of Cells as
       * ours.  NOTE: This is different from the pb managed cell_count of the
       * 'cell' field above which is non-null when the cells are pb'd.
       * </pre>
       */
      public Builder setAssociatedCellCount(int value) {
        bitField0_ |= 0x00000002;
        associatedCellCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 associated_cell_count = 2;</code>
       *
       * <pre>
       * The below count is set when the associated cells are
       * not part of this protobuf message; they are passed alongside
       * and then this Message is just a placeholder with metadata.
       * The count is needed to know how many to peel off the block of Cells as
       * ours.  NOTE: This is different from the pb managed cell_count of the
       * 'cell' field above which is non-null when the cells are pb'd.
       * </pre>
       */
      public Builder clearAssociatedCellCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        associatedCellCount_ = 0;
        onChanged();
        return this;
      }

      private boolean exists_ ;
      /**
       * <code>optional bool exists = 3;</code>
       *
       * <pre>
       * used for Get to check existence only. Not set if existence_only was not set to true
       *  in the query.
       * </pre>
       */
      public boolean hasExists() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool exists = 3;</code>
       *
       * <pre>
       * used for Get to check existence only. Not set if existence_only was not set to true
       *  in the query.
       * </pre>
       */
      public boolean getExists() {
        return exists_;
      }
      /**
       * <code>optional bool exists = 3;</code>
       *
       * <pre>
       * used for Get to check existence only. Not set if existence_only was not set to true
       *  in the query.
       * </pre>
       */
      public Builder setExists(boolean value) {
        bitField0_ |= 0x00000004;
        exists_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool exists = 3;</code>
       *
       * <pre>
       * used for Get to check existence only. Not set if existence_only was not set to true
       *  in the query.
       * </pre>
       */
      public Builder clearExists() {
        bitField0_ = (bitField0_ & ~0x00000004);
        exists_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:Result)
    }

    static {
      defaultInstance = new Result(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:Result)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_Result_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_Result_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\014Client.proto\032\nCell.proto\"L\n\006Result\022\023\n\004" +
      "cell\030\001 \003(\0132\005.Cell\022\035\n\025associated_cell_cou" +
      "nt\030\002 \001(\005\022\016\n\006exists\030\003 \001(\010BB\n*org.apache.h" +
      "adoop.hbase.protobuf.generatedB\014ClientPr" +
      "otosH\001\210\001\001\240\001\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.apache.hadoop.hbase.protobuf.generated.CellProtos.getDescriptor(),
        }, assigner);
    internal_static_Result_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_Result_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_Result_descriptor,
        new java.lang.String[] { "Cell", "AssociatedCellCount", "Exists", });
    org.apache.hadoop.hbase.protobuf.generated.CellProtos.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
