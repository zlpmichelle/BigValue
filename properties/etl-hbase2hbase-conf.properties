# The hbase source table name
hbase.source.table.name=sourcetable

# To be cleaned rowkey range - all, a,b
to.be.cleaned.rowkey.range.spec=all

# Tobe cleaned hbase cell spec. column family.column qualifier,column family.column qualifier
to.be.cleaned.cell.spec=cf.col1,cf.col2,cf.col3,cf.col4,cf.col5,cf.col6,cf.col7,cf.col8,cf.col9,cf.col10,cf.col11,cf.col12,cf.col13

# The hbase target table name
hbase.target.table.name=targettable

# The hbase target table cell spec
hbase.target.table.cell.spec=rowkey,f.col1,f.col2,f.col3,f.col4,f.col5,f.col6,f.col7,f.col8,f.col9,f.col10,f.col11,f.col12,f.col13,f.col14,f.col15,f.col16,f.col17,f.col18,f.col19,f.col20,f.col21,f.col22,f.col23,f.col24
rowkey=rowkey
f.col1=reverse(concat(substr(rpad(trim(cf.col1),10,0),2,6),'x','y'))
#f.col1=reverse(concat(substr(rpad(trim(cf.col1),10,0),2,6),cf.col1,cf.col2))


f.col2=trim(cf.col2)
f.col3=concat(trim(cf.col3),'!','@','#')
#f.col3=trim(cf.col3)
f.col4=cf.col4
f.col5=defaultIfBlank(cf.col5,cf.col2)
f.col6=reverse(cf.col6)

f.col7=delete(reverse(concat(substr(rpad(trim(cf.col1),10,0),2,6),'x','y')),'y')
f.col8=keep(reverse(concat(substr(rpad(trim(cf.col1),10,0),2,6),'x','y')),'y')
f.col9=squeeze(reverse(concat(substr(rpad(trim(cf.col1),10,0),2,6),'x','y')),'0')

f.col10=repeat(cf.col2,6)
f.col11=center(cf.col2, 20,'X')
f.col12=abbreviate(repeat(cf.col2,60),20 )

f.col13=strip(center(cf.col2, 20,'X'),'X')
f.col14=stripStart(repeat(cf.col2,6),'v')
f.col15=stripEnd(repeat(cf.col2,6),'2' )

f.col16=replace(cf.col4,'va','VX')
f.col17=replaceChars(cf.col4,'v','x')

f.col18=deleteWhitespace(cf.col7)
f.col19=removeBlank(cf.col7)
f.col20=removeDigits(cf.col8)
f.col21=keepDigits(cf.col9)
f.col22=convertTo(cf.col10,mobilePhone,invalid phone number)
f.col23=convertTo(cf.col11,mobilePhone,invalid phone number)
f.col24=convertTo(cf.col13,chineseName,invalid chinese name)

# The hbase target table split key spec
hbase.target.table.split.key.spec=

# The write to wal flag
hbase.target.write.to.wal.flag=false

##################################################################################################################################
# 
# ETL expressions
#
# trim(a), rpad(a,x,y), lpad(a,x,y), substring(a,x,y), concat(a,b,c), reverse(a), rand(x)
#
# defaultIfBlank(a,b), defaultIfEmpty(a,b), defaultIfNotBlank(a,b), defaultIfNotEmpty(a,'x') 

# delete(a,'x'), keep(a,'x'), squeeze(a,'x')

# repeat(a, 6), center(a, 20), abbreviate(a, 20)

# strip(a, 'x'), stripStart(a,'x'), stripEnd(a,'x')

# replace(a,'x','y'),replaceChars(a,'x','y')

# deleteWhitespace(a), removeBlank(a), removeDigits(a), keepDigits(a) 

# convertTo(a,mobilePhone/chineseName/idCard,default)

# boolean(a)
#
##################################################################################################################################

